View(data2)
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
as.integer(steps_attime$steps[steps_attime$interval == data2$interval][1])
View(data2)
steps_attime <- ddply(data, ~interval, summarise, steps = as.integer(mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
View(data2)
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
View(data2)
rm(data2)
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
plot(data2)
plot(steps_attime)
data2$steps[is.na(data2$steps)] <-
round(steps_attime$steps[steps_attime$interval == data2$interval][1], digits = 0)
View(data2)
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
View(data2)
rm(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][1]
View(data2)
View(steps_attime)
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][[1]]
View(data2)
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval][[1]]
View(data2)
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval[is.na(data2$steps)]][[1]]
data2$steps[is.na(data2$steps)] <-
steps_attime$steps[steps_attime$interval == data2$interval[is.na(data2$steps)]][1]
View(data2)
View(steps_attime)
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps <- ifelse(is.na(data2$steps), steps_attime$steps[steps_attime$interval == data2$interval], data2$steps)
data2$steps <- ifelse(is.na(data2$steps), steps_attime$steps[steps_attime$interval == data2$interval][1], data2$steps)
View(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps <- ifelse(is.na(data2$steps), steps_attime$steps[steps_attime$interval == data2$interval][1], data2$steps)
View(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_attime <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps <- ifelse(is.na(data2$steps), steps_attime[steps_attime$interval == data2$interval, ]['Steps'], data2$steps)
data2$steps2 <- ifelse(is.na(data2$steps),
steps_attime[steps_at_time$interval == data2$interval, ]['Steps'],
data2$steps)
View(data2)
View(data2)
#Total missing values
sum(is.na(data2))
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps2 <- ifelse(is.na(data2$steps),
steps_attime[steps_at_time$interval == data2$interval, ]['Steps'],
data2$steps)
data2$steps2 <- ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, ]['Steps'],
data2$steps)
data2$steps2 <- ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, ]['steps'],
data2$steps)
View(data2)
data2$steps2 <- ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps)
View(data2)
#Total missing values
sum(is.na(data2))
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
View(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
View(data2)
data2$steps
help(weekdays)
data2$weekday <- weekdays(data2$date)
data2$weekday <- weekdays(toString(data2$date))
toString(data2$date)
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d")
)
View(data2)
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
View(data2)
steps_at_time_day <- ddply(data2, ~interval + weekday, steps = mean(steps))
View(steps_at_time_day)
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
toString(data2$date)
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
#Calculate mean steps at each time per day type
steps_at_time_day <- ddply(data2, ~interval + weekday, steps = mean(steps))
pair(steps_at_time_day)
plot(steps_at_time_day)
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
View(steps_at_time_day)
plot(steps_at_time_day)
sum(is.na(data2$steps))
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
sum(is.na(data2$steps))
sum(is.na(data2$interval))
sum(is.na(data2$steps))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'][1],
data2$steps) )
toString(data2$date)
sum(is.na(data2$steps))
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
#Calculate mean steps at each time per day type
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
plot(steps_at_time_day)
require(ggplot2)
require(ggplot2)
g <- ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday)
g
require(ggplot2)
g <- ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( weekday ~)
g <- ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(weekday ~)
require(ggplot2)
g <- ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(weekday)
require(ggplot2)
g <- ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(weekday ~ .)
g
g
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(weekday ~ .)
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(. ~ weekday)
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday)
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( weekday ~~)
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday, ncol = 1 )
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'][1],
data2$steps) )
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
View(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'][[1]],
data2$steps) )
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
#Calculate mean steps at each time per day type
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday, ncol = 1 )
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
sum(steps_at_time[steps_at_time$interval == data2$interval, 'steps']),
data2$steps) )
View(data2)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
sum(steps_at_time[steps_at_time$interval == data2$interval, 'steps']),
data2$steps) )
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
```
```{r}
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
#Calculate mean steps at each time per day type
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
```{r}
#Then plot this as a graph using ggplot
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) + geom_line() + facet_wrap( ~ weekday, ncol = 1 )
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday, ncol = 1 )
steps_at_time <- ddply(data2, ~interval, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
plot(data2$weekday)
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = sum(steps))
View(steps_at_time_day)
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, sts = sum(steps))
data2$steps <- round( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
```
Where a value is missing I substitute the mean steps for each time period, rounding to the nearest integer value
```{r}
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude the average value if original is missing
data2$steps <- round( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~weekday, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, sts = sum(steps))
plot(data2$steps)
sum(is.na(data2$steps))
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'],
data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'][1],
data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time[steps_at_time$interval == data2$interval, 'steps'][[1]],
data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
data2$steps <- as.integer( ifelse(is.na(data2$steps),
steps_at_time$steps[steps_at_time$interval == data2$interval],
data2$steps) )
sum(is.na(data2$steps))
k <- steps_at_time$steps[steps_at_time$interval == 1000]
k <- steps_at_time$steps[steps_at_time$interval == data@$interval]
k <- steps_at_time$steps[steps_at_time$interval == data$interval]
k <- steps_at_time$steps[steps_at_time$interval == data2$interval]
#Find the mean steps at each time period
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
average_at_time <- steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps <- as.integer( ifelse(is.na(data2$steps), average_at_time, data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- round( ddply(data, ~interval, summarise, steps = mean(steps)) )
#Substitude if is.na
average_at_time <- steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps <- as.integer( ifelse(is.na(data2$steps), average_at_time, data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
average_at_time <- steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps <- as.integer( ifelse(is.na(data2$steps), average_at_time, data2$steps) )
sum(is.na(data2$steps))
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
average_at_time <- steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps <- ifelse(is.na(data2$steps), average_at_time, data2$steps)
sum(is.na(data2$steps))
View(steps_at_time)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
average_at_time <- steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps[is.na(data2$steps)] <- average_at_time[is.na(data2$steps)]
#data2$steps <- ifelse(is.na(data2$steps), average_at_time, data2$steps)
sum(is.na(data2$steps))
is.na(data2$steps)
sum(is.na(data2$steps))
average_at_time <- sapply(data2$interval, function (x) steps_at_time[steps_at_time$interval = x])
average_at_time <- sapply(data2$interval, function (x) steps_at_time[steps_at_time$interval == x])
q
average_at_time <- sapply(data2$interval, function (x) steps_at_time$steps[steps_at_time$interval == x])
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
average_at_time <- sapply(data2$interval, function (x) steps_at_time$steps[steps_at_time$interval == x])
steps_at_time$steps[steps_at_time$interval == data2$interval]
data2$steps[is.na(data2$steps)] <- average_at_time[is.na(data2$steps)]
#data2$steps <- ifelse(is.na(data2$steps), average_at_time, data2$steps)
sum(is.na(data2$steps))
#Substitude if is.na
average_at_time <- sapply(data2$interval, function (x) steps_at_time$steps[steps_at_time$interval == x])
data2$steps[is.na(data2$steps)] <- average_at_time[is.na(data2$steps)]
sum(is.na(data2$steps))
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
#Total missing values
sum(is.na(data2))
#Find the mean steps at each time period
steps_at_time <- ddply(data, ~interval, summarise, steps = mean(steps))
#Substitude if is.na
average_at_time <- sapply(data2$interval, function (x) steps_at_time$steps[steps_at_time$interval == x])
data2$steps[is.na(data2$steps)] <- average_at_time[is.na(data2$steps)]
sum(is.na(data2$steps))
data2$weekday <- weekdays(as.Date(data2$date, "%Y-%m-%d"))
weekend <- c('Saturday', 'Sunday')
data2$weekday <- ifelse(data2$weekday %in% weekend, 'weekend', 'weekday')
data2$weekday <- factor(data2$weekday)
#Calculate mean steps at each time per day type
steps_at_time_day <- ddply(data2, ~interval + weekday, summarise, steps = mean(steps))
require(ggplot2)
ggplot(steps_at_time_day, aes(x = interval, y = steps)) +
geom_line() +
facet_wrap( ~ weekday, ncol = 1 )
#Read in the data
data <- read.csv('activity.csv')
data <- data[!is.na(data$steps), ]
#Publish the data
require(plyr)
steps_perday <- ddply(data, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
steps_perday <- ddply(data2, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
data2 <- read.csv('activity.csv')
steps_perday <- ddply(data2, ~date, summarise, total = sum(steps))
hist(steps_perday$total)
mean(steps_perday$total)
median(steps_perday$total)
